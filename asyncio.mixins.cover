    1: """Event loop mixins."""
       
    1: import threading
    1: from . import events
       
    1: _global_lock = threading.Lock()
       
       
    2: class _LoopBoundMixin:
    1:     _loop = None
       
    1:     def _get_loop(self):
    5:         loop = events._get_running_loop()
       
    5:         if self._loop is None:
    2:             with _global_lock:
    1:                 if self._loop is None:
    1:                     self._loop = loop
    5:         if loop is not self._loop:
>>>>>>             raise RuntimeError(f'{self!r} is bound to a different event loop')
    5:         return loop
